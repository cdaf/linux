echo "List available software"; echo
./capabilities.sh

echo "Some basic functions"; echo
REFRSH . $TMPDIR/workspacecopy
REMOVE TMPDIR/workspacecopy

echo "Resolve and reveal property, then assign to a named variable"; echo
ASSIGN $userDir = $user_dir

echo "Load Propertes as variables and reveal their values"
PROPLD $TARGET reveal

echo "The following is an example of secrets management"
echo "DO NOT log the GPG_KEY, this is supplied by CD tool as environment variable"; echo
GPG_KEY=8b778ff3fd80def90161e40b9c54527e

echo "A sensitive value can be logged using non-reversable mask"
GPG_KEY_MASK=$(MASKED $GPG_KEY)

VARCHK properties.varchk

echo "DO NOT decrypt the file without capturing the result"; echo
DECRYP ./crypt/PGP_CRYPT $GPG_KEY

echo "Decrypt to a variable"; echo
result=$(DECRYP ./crypt/PGP_CRYPT $GPG_KEY)

echo "DO NOT log the result"; echo
echo $result

echo "Decrypt to a file"; echo
DECRYP ./crypt/PGP_CRYPT $GPG_KEY > decrypted.txt

echo "List content of tokenised properties file"; echo
cat crypt-test.yml

echo "Detokenise plain text with embedded variable"; echo
DETOKN crypt-test.yml $TARGET reveal

echo "Safe to list as no sensitive values have been transformed"; echo
cat crypt-test.yml

echo "Detokenise secrets with embedded variable, using non-default token, i.e. @user_password@"; echo
export CDAF_OVERRIDE_TOKEN=@
DETOKN crypt-test.yml $TARGET resolve

echo "Detokenise with masked secrets, only supports encrypted name/value files, in-memory, i.e. unencrypted file is never on disk"; echo
ASSIGN CDAF_OVERRIDE_TOKEN
DETOKN crypt-test.yml ./crypt/PGP_CRYPT $GPG_KEY

echo "DO NOT list the contents of the detokenised file because CD tool does not know to mask these values"; echo
cat crypt-test.yml