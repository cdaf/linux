# https://docs.microsoft.com/en-us/azure/devops/pipelines/get-started-yaml
# https://docs.microsoft.com/en-us/azure/devops/pipelines/process/variables
# https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=vsts&tabs=yaml

name: $(Rev:r)
# name: $(TeamProject)_$(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

pool:
  vmImage: 'Ubuntu 16.04'

trigger:
  branches:
    include:
    - '*'

# For a private pool, in this example, named Private requiring the capability of bash shell
#pool: 
#  name: Azure
#  demands: sh

# or pool with no demands
#pool: Default
  
variables:
  - group: Git-Reader-for-Branch-Clean-up
  - name: gitUser
    value: $[variables.GIT_USER]
  - name: gitPass
    value: $[variables.GIT_PASS]

steps:
  - script: ./automation/entry.sh "$BUILD_BUILDNUMBER" "$BUILD_SOURCEBRANCHNAME" "staging@$BUILD_ARTIFACTSTAGINGDIRECTORY"
    env: 
      GIT_USER: $(gitUser)
      GIT_PASS: $(gitPass)

# Require explicit exit code if using a multi-line script
# - script: |
#     export READ_ONLY_PAT=$(READ_ONLY_PAT)
#     ~/cdaf/entry.sh "$(Build.BuildNumber)" "$(Build.SourceBranchName)" "staging@$(Build.ArtifactStagingDirectory)"
#     exitCode=$?
#     if [ "$exitCode" != "0" ]; then exit $exitCode; fi

#  env:
#    MAVEN_ARTIFACT_TOKEN: $(MAVEN_ARTIFACT_TOKEN)

#- task: PublishTestResults@2
#  inputs:
    #testResultsFormat: 'JUnit' # Options: JUnit, NUnit, VSTest, xUnit, cTest
    #testResultsFiles: '**/TEST-*.xml' 
    #searchFolder: '$(System.DefaultWorkingDirectory)' # Optional
    #mergeTestResults: true # Optional
    #failTaskOnFailedTests: true # Optional
    #testRunTitle: # Optional
    #buildPlatform: # Optional
    #buildConfiguration: # Optional
    #publishRunAttachments: true # Optional
    
- task: PublishBuildArtifacts@1
    #ArtifactName: 'drop'
    #publishLocation: 'Container'