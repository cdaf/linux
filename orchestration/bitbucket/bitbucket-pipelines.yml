image: cdaf/linux:latest

pipelines:
  default:
    - step:
        name: Build and Test

        # If not using docker-in-docker, remove this declaration and add the following to the script 
        # - export DOCKER_HOST=unix:///var/run/docker.sock
        services:
          - docker

        # To run natively, remove image: and services: declaration
        # runs-on:
        #   - self.hosted
        #   - linux.shell

        script:
          
          # Use Latest Stable
          # - curl -s https://cdaf.io/static/app/downloads/cdaf.sh | bash -
          # - ./automation/entry.sh $BITBUCKET_BUILD_NUMBER $BITBUCKET_BRANCH

          # Using CDAF Edge
          # - curl -s https://raw.githubusercontent.com/cdaf/linux/master/install.sh | bash -
          # - ./automation/entry.sh $BITBUCKET_BUILD_NUMBER $BITBUCKET_BRANCH

          # CDAF installed in repo
          # - ./automation/entry.sh $BITBUCKET_BUILD_NUMBER $BITBUCKET_BRANCH
        
          ## CDAF Install is not required because pre-instlled in cdaf/linux:latest, following samples are for use in images without CDAF
          - entry.sh $BITBUCKET_BUILD_NUMBER $BITBUCKET_BRANCH

  branches:
    'master':
      - step:
          name: Build Only

          services:
            - docker

          # runs-on:
          #   - self.hosted
          #   - linux.shell

          script:
            - ci.sh $BITBUCKET_BUILD_NUMBER $BITBUCKET_BRANCH
          artifacts:
            - release.sh

          # Legacy artefacts
          # artifacts:
          #   - "TasksLocal/**"
          #   - "*.gz"

      - step:
          name: Docker Test

          services:
            - docker

          # runs-on:
          #   - self.hosted
          #   - linux.shell

          deployment: Test
          script:
            - ./release.sh DOCKER

      - step:
          name: Deploy to staging

          services:
            - docker

          # runs-on:
          #   - self.hosted
          #   - linux.shell

          deployment: Staging
          script:
            - ./release.sh $BITBUCKET_DEPLOYMENT_ENVIRONMENT

      - step:
          name: Deploy to production

          services:
            - docker

          # runs-on:
          #   - self.hosted
          #   - linux.shell

          deployment: Production
          trigger: manual
          script:
            - ./release.sh $BITBUCKET_DEPLOYMENT_ENVIRONMENT
