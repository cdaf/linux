---
version: 2

plan:
  project-key: PRJ
  key: PLANK
  name: Name that appears on Bamboo UI

stages:
  - Build Stage:
    - Build Job

Build Job:
  tasks:
    - script: |
        !/bin/bash
        curl -s https://cdaf.io/static/app/downloads/cdaf.sh | bash -
        "./automation/ci.sh ${bamboo.buildNumber} ${bamboo.repository.branch.name}

# Edge Implementation 
#    - script: |
#        !/bin/bash
#        curl --silent https://codeload.github.com/cdaf/linux/zip/refs/heads/master -o linux.zip
#        unzip linux.zip
#        export CDAF_SKIP_CONTAINER_BUILD=yes
#        ./linux-master/automation/entry.sh $(Build.BuildNumber) $(Build.SourceBranch) staging@$(Build.ArtifactStagingDirectory)

# In-source Implementation 
#    - script: |
#        !/bin/bash
#        targetType: filePath
#        filePath: ./automation/entry.sh
#        arguments: $(Build.BuildNumber) $(Build.SourceBranch) staging@$(Build.ArtifactStagingDirectory)

  artifacts:
    - name: Package
      pattern: '*.gz'
      shared: true
    - name: TasksLocal
      pattern: 'TasksLocal/**'
      shared: true

---
version: 2

deployment:
  name: Release Name on Bamboo UI
  source-plan: PRJ-PLANK

release-naming:
  next-version-name: ${bamboo.buildNumber}

environments:
  - NO_PROP
  - LINUX
  - CDAF

NO_PROP:
  triggers:
    - build-success
  tasks:
    - clean
    - artifact-download:
        destination: ${bamboo.working.directory}
    - script:
        - '#!/bin/bash'
        - "./TasksLocal/delivery.sh ${bamboo.deploy.environment} ${bamboo.deploy.release}"

LINUX:
  triggers:
    - environment-success: NO_PROP
  tasks:
    - clean
    - artifact-download:
        destination: ${bamboo.working.directory}
    - script:
        - '#!/bin/bash'
        - "./TasksLocal/delivery.sh ${bamboo.deploy.environment} ${bamboo.deploy.release}"

CDAF:
  triggers:
    - environment-success: LINUX
  tasks:
    - clean
    - artifact-download:
        destination: ${bamboo.working.directory}
    - script:
        - '#!/bin/bash'
        - "./TasksLocal/delivery.sh ${bamboo.deploy.environment} ${bamboo.deploy.release}"
