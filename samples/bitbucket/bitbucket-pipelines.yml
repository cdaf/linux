image: cdaf/linux:latest

pipelines:
  default:
    - step:
        name: Build and Test
        script:
        
          ## CDAF Install is not required because pre-instlled in cdaf/linux:latest, following samples are for use in images without CDAF
          - entry.sh $BITBUCKET_BUILD_NUMBER $BITBUCKET_BRANCH
          
          # Use Latest Stable
          # - curl -s https://cdaf.io/static/app/downloads/cdaf.sh | bash -
          # - ./automation/entry.sh $BITBUCKET_BUILD_NUMBER $BITBUCKET_BRANCH

          # Using CDAF Edge
          # - curl -s https://codeload.github.com/cdaf/linux/zip/refs/heads/master -o linux-master.zip
          # - unzip linux-master.zip
          # - ./linux-master/automation/entry.sh $BITBUCKET_BUILD_NUMBER $BITBUCKET_BRANCH

          # CDAF installed in repo
          # - ./automation/entry.sh $BITBUCKET_BUILD_NUMBER $BITBUCKET_BRANCH
          
        services:
          - docker

  branches:
    'master':
      - step:
          name: Build Only
          script:
            - curl -s https://cdaf.io/static/app/downloads/cdaf.sh | bash -
            - ./automation/ci.sh $BITBUCKET_BUILD_NUMBER $BITBUCKET_BRANCH
          artifacts:
            - "release.sh"
          services:
            - docker

      - step:
          name: Docker Test
          deployment: DOCKER
          script:
            - ./release.sh $BITBUCKET_DEPLOYMENT_ENVIRONMENT
          services:
            - docker

      - step:
          name: Deploy to staging
          deployment: Staging
          script:
            - ./release.sh $BITBUCKET_DEPLOYMENT_ENVIRONMENT
          services:
            - docker

      - step:
          name: Deploy to production
          deployment: Production
          trigger: manual
          script:
            - ./release.sh $BITBUCKET_DEPLOYMENT_ENVIRONMENT
          services:
            - docker