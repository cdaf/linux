stages:
  - build
  - targetlessCD
  - staging
  - live

cdaf-ci:
  stage: build
  tags:
    - bash

  # To use native container runner with CDAF pre-installed
  # tags:
  #   - linux
  # image: cdaf/linux
  # script: entry.sh ${CI_BUILD_ID} ${CI_BUILD_REF_NAME}


  # Latest Published Release
  script: |
    curl --silent https://cdaf.io/static/app/downloads/cdaf.sh | bash -
    ./automation/entry.sh ${CI_BUILD_ID} ${CI_BUILD_REF_NAME}

#  # Edge Implementation 
#  script: |
#    curl --silent https://codeload.github.com/cdaf/linux/zip/refs/heads/master -o linux.zip
#    unzip linux.zip
#    ./linux-master/automation/entry.sh ${CI_BUILD_ID} ${CI_BUILD_REF_NAME}

#  # In-source Implementation 
#  script: "automation/entry.sh ${CI_BUILD_ID} ${CI_BUILD_REF_NAME}"

  artifacts:
    paths:
      - release.sh

cd:
  stage: targetlessCD
  tags:
    - bash
  script: "./release.sh ${CI_JOB_NAME} ${CI_PIPELINE_ID}"
  environment: "${CI_STAGE_NAME}"
  dependencies:
    - cdaf-ci

test:
  stage: staging
  tags:
    - bash
  script: "./release.sh ${CI_JOB_NAME} ${CI_PIPELINE_ID}"
  environment: staging
  dependencies:
    - cdaf-ci
  only:
    - master

production:
  stage: live
  tags:
    - bash
  script: "./release.sh ${CI_JOB_NAME} ${CI_PIPELINE_ID}"
  when: manual
  environment: live
  needs: 
    - test
    - cdaf-ci
  dependencies:
    - cdaf-ci
  only:
    - master
  