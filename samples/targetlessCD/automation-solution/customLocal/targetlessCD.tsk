echo "List containers current state"
docker ps

echo "Load the branch (REVISION) & containerImage from the manifest, placed here by package.tsk"
PROPLD manifest.txt

branch=$(echo "$REVISION" | tr '[A-Z]' '[a-z]')

ASSIGN $id="${SOLUTION}_${branch}"
export WORK_SPACE="$(dirname "$(pwd)")"

# Copy any artefacts needed into specific images here, example brings in remoteTasks package
# VECOPY ../${SOLUTION}-${BUILDNUMBER}.tar.gz compose/target/deploy.tar.gz"

cd compose
../imageBuild.sh ${id} ${BUILDNUMBER} ${containerImage}
cd ..

ASSIGN $composePersist="/tmp/${id}"
MAKDIR $composePersist
VECOPY compose/docker-compose.yml $composePersist
cd $composePersist

echo "Cleanup from previously test"
export TARGET_TAG="${id}_target"
export TEST_TAG="${id}_test"
docker-compose down --remove-orphans
docker-compose rm -f

echo "Set build number for environment"
export TARGET_TAG="${id}_target:${BUILDNUMBER}"
export TEST_TAG="${id}_test:${BUILDNUMBER}"

echo "Deploy to target (allow up to 2 minutes)"
docker-compose up -d target
containerID=$(docker ps -aq --filter "ancestor=$TARGET_TAG")
$WORK_SPACE/TasksLocal/dockerLog.sh $containerID 'Watch log to keep container alive' 120

echo "Execute tests (allow 5 minutes to complete)"
docker-compose up -d test
containerID=$(docker ps -aq --filter "ancestor=$TEST_TAG")
$WORK_SPACE/TasksLocal/dockerLog.sh $containerID 'Automated Test Execution Completed Successfully.' 300

echo "List running containers"
docker ps

echo "Tear down if not master"
if [ -z "$DLW_COMPOSE_KEEP" ]; then docker-compose down ; fi
if [ -z "$DLW_COMPOSE_KEEP" ]; then docker-compose rm -f ; fi
